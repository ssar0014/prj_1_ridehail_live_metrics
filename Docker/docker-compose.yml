volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  data_warehouse: {}

services:
  ## KAFKA KRAFT SETUP
    kafka-controller-1:
      container_name: kafka-controller-1
      image: confluentinc/cp-server:latest
      environment:
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: controller
        KAFKA_LISTENERS: CONTROLLER://kafka-controller-1:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        KAFKA_GROUP_INITIAL_REBALACE_DELAY_MS: 0
        CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      networks:
        - ridehail_metrics

    kafka-controller-2:
      container_name: kafka-controller-2
      image: confluentinc/cp-server:latest
      environment:
        KAFKA_NODE_ID: 2
        KAFKA_PROCESS_ROLES: controller
        KAFKA_LISTENERS: CONTROLLER://kafka-controller-2:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        KAFKA_GROUP_INITIAL_REBALACE_DELAY_MS: 0
        CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      networks:
        - ridehail_metrics

    kafka-broker-1:
      image: confluentinc/cp-server:latest
      ports:
        - 29092:9092
      environment:
        KAFKA_NODE_ID: 4
        KAFKA_PROCESS_ROLES: broker
        KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://localhost:29092'
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        KAFKA_GROUP_INITIAL_REBALACE_DELAY_MS: 0
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      depends_on:
        - kafka-controller-1
        - kafka-controller-2
      networks:
        - ridehail_metrics

    kafka-broker-2:
      image: confluentinc/cp-server:latest
      ports:
        - 39092:9092
      environment:
        KAFKA_NODE_ID: 5
        KAFKA_PROCESS_ROLES: broker
        KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://localhost:39092'
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        KAFKA_GROUP_INITIAL_REBALACE_DELAY_MS: 0
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      depends_on:
        - kafka-controller-1
        - kafka-controller-2
      networks:
        - ridehail_metrics
    kafka-broker-3:
      image: confluentinc/cp-server:latest
      ports:
        - 49092:9092
      environment:
        KAFKA_NODE_ID: 6
        KAFKA_PROCESS_ROLES: broker
        KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker-3:19092,PLAINTEXT_HOST://localhost:49092'
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093
        KAFKA_GROUP_INITIAL_REBALACE_DELAY_MS: 0
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      depends_on:
        - kafka-controller-1
        - kafka-controller-2
      networks:
        - ridehail_metrics

  ## APACHE DRUID SETUP
    postgres:
      container_name: postgres
      image: postgres:latest
      ports:
        - "5432:5432"
      volumes:
        - metadata_data:/var/lib/postgresql/data
      environment:
        - POSTGRES_PASSWORD=admin
        - POSTGRES_USER=admin
        - POSTGRES_DB=ridehail_metrics
      networks:
        - ridehail_metrics

    # Need 3.5 or later for container nodes
    zookeeper:
      container_name: zookeeper
      image: zookeeper:latest
      ports:
        - "2181:2181"
      environment:
        - ZOO_MY_ID=1
      networks:
        - ridehail_metrics

    coordinator:
      image: ghcr.io/arm64-compat/apache/druid:31.0.1
      container_name: coordinator
      volumes:
        - druid_shared:/opt/shared
        - coordinator_var:/opt/druid/var
      depends_on:
        - zookeeper
        - postgres
      ports:
        - "8081:8081"
      command:
        - coordinator
      env_file:
        - druid_env
      networks:
        - ridehail_metrics

    broker:
      image: ghcr.io/arm64-compat/apache/druid:31.0.1
      container_name: broker
      volumes:
        - broker_var:/opt/druid/var
      depends_on:
        - zookeeper
        - postgres
        - coordinator
      ports:
        - "8082:8082"
      command:
        - broker
      env_file:
        - druid_env
      networks:
        - ridehail_metrics

    historical:
      image: ghcr.io/arm64-compat/apache/druid:31.0.1
      container_name: historical
      volumes:
        - druid_shared:/opt/shared
        - historical_var:/opt/druid/var
      depends_on: 
        - zookeeper
        - postgres
        - coordinator
      ports:
        - "8083:8083"
      command:
        - historical
      env_file:
        - druid_env
      networks:
        - ridehail_metrics

    middlemanager:
      image: ghcr.io/arm64-compat/apache/druid:31.0.1
      container_name: middlemanager
      volumes:
        - druid_shared:/opt/shared
        - middle_var:/opt/druid/var
      depends_on: 
        - zookeeper
        - postgres
        - coordinator
      ports:
        - "8091:8091"
        - "8100-8105:8100-8105"
      command:
        - middleManager
      env_file:
        - druid_env
      networks:
        - ridehail_metrics

    router:
      image: ghcr.io/arm64-compat/apache/druid:31.0.1
      container_name: router
      volumes:
        - router_var:/opt/druid/var
      depends_on:
        - zookeeper
        - postgres
        - coordinator
      ports:
        - "8888:8888"
      command:
        - router
      env_file:
        - druid_env
      networks:
        - ridehail_metrics

    ## PostgreSQL Data Warehouse
    postgres-dw:
      container_name: postgres-dw
      image: postgres:latest
      ports:
        - "5434:5434"
      volumes:
        - data_warehouse:/var/lib/postgresql/data
      environment:
        - POSTGRES_PASSWORD=admin
        - POSTGRES_USER=admin
        - POSTGRES_DB=ridehail_data_warehouse
      networks:
        - ridehail_metrics

    #TODO: Apache Flink
networks:
    ridehail_metrics: